name: Deploy to GitHub Pages

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout
      
      - name: Setup Node.js
        uses: actions/setup-node
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Setup Pages
        uses: actions/configure-pages
        
      - name: Validate build scripts
        run: |
          if [ ! -f "./build.sh" ] || [ ! -f "./fix-paths.sh" ]; then
            echo "Required build scripts are missing"
            exit 1
          fi
          chmod +x ./build.sh ./fix-paths.sh

      - name: Build optimized version
        run: ./build.sh
        
      - name: Fix resource paths
        run: ./fix-paths.sh
        
      - name: Verify build output
        run: |
          if [ ! -d "./dist" ]; then
            echo "Build failed - dist directory not found"
            exit 1
          fi
          
          required_files=("index.html" "sw.js" "CNAME")
          for file in "${required_files[@]}"; do
            if [ ! -f "./dist/$file" ]; then
              echo "Missing required file: $file"
              exit 1
            fi
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages

      - name: Verify deployment
        if: always()
        run: |
          if [[ "${{ steps.deployment.conclusion }}" != "success" ]]; then
            echo "::error::Deployment failed"
            exit 1
          fi
